# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
  - stage: "BuildStage"
    displayName: "Build Stage"
    jobs:
      - job: "BuildJob"
        pool:
         vmImage: windows-latest
        variables:
         buildConfiguration: 'Release'
        steps:
          - task: DotNetCoreCLI@2
            displayName: "Restore Project"
            inputs:            
              command: 'restore'
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: "Build Project"
            inputs:
              command: 'build'
              projects: '**/*.sln'
              arguments: '--configuration $(buildConfiguration)'
          
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration $(buildConfiguration) --output $(build.artifactStagingDirectory)'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(build.ArtifactStagingDirectory)'
              artifact: 'drop'
              publishLocation: 'pipeline'
  
  - stage: "DeployToDev"
    dependsOn: "BuildStage"
    displayName: "Deploy to Development"
    jobs:
      - job: "DeployToDevJob"
        steps:
         - task: DownloadPipelineArtifact@2
           inputs:
             buildType: 'current'
             artifactName: 'drop'
             targetPath: '$(Pipeline.Workspace)'
         - task: AzureRmWebAppDeployment@4
           inputs:
             ConnectionType: 'AzureRM'
             azureSubscription: 'Free Trial(26ef10f5-d8ce-4772-9545-b09ef2f5bac5)'
             appType: 'webApp'
             WebAppName: 'MvcGithubApp'
             packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

             

